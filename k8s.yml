apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: csi-zfs-sc
provisioner: zfs-csi
reclaimPolicy: Delete
volumeBindingMode: Immediate
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-service-account
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: csi-cluster-role
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - create
  - delete
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - storage.k8s.io
  resources:
  - volumeattachments
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - list
  - watch
  - create
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: csi-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: csi-cluster-role
subjects:
- kind: ServiceAccount
  name: csi-service-account
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: zfs-driver
    class: infra
  name: csi-zfs-driver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: zfs-driver
  template:
    metadata:
      labels:
        app: zfs-driver
        class: infra
    spec:
      serviceAccount: csi-service-account
      containers:
      - name: external-provisioner
        args:
        - --v=5
        - --provisioner=zfs-csi
        - --csi-address=/csi/csi.sock
        image: quay.io/k8scsi/csi-provisioner:v0.3.0
        imagePullPolicy: Always
        volumeMounts:
        - mountPath: /csi
          name: socket-dir
      - name: driver-registrar
        args:
        - --v=5
        - --csi-address=/csi/csi.sock
        - --kubelet-registration-path=/var/lib/kubelet/plugins/zfs-csi/csi.sock
        env:
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        image: quay.io/k8scsi/driver-registrar:v0.3.0
        imagePullPolicy: Always
        volumeMounts:
        - mountPath: /csi
          name: socket-dir
        - mountPath: /registration
          name: registration-dir
      - name: external-attacher
        args:
        - --v=5
        - --csi-address=$(ADDRESS)
        env:
        - name: ADDRESS
          value: /csi/csi.sock
        image: quay.io/k8scsi/csi-attacher:v0.3.0
        imagePullPolicy: Always
        volumeMounts:
        - mountPath: /csi
          name: socket-dir
      - name: zfs-driver
        args:
        - --v=5
        - --zfs-name=yssd0
        env:
        - name: CSI_ENDPOINT
          value: /csi/csi.sock
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        image: docker.dolansoft.org/dolansoft/zfs-csi-driver:dev2
        imagePullPolicy: Always
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /csi
          name: socket-dir
        - mountPath: /var/lib/kubelet/pods
          mountPropagation: Bidirectional
          name: mountpoint-dir
        - mountPath: /mnt/yssd0
          mountPropagation: Bidirectional
          name: zfs-mount
      volumes:
      - hostPath:
          path: /var/lib/kubelet/plugins/zfs-csi
          type: DirectoryOrCreate
        name: socket-dir
      - hostPath:
          path: /var/lib/kubelet/pods
          type: DirectoryOrCreate
        name: mountpoint-dir
      - hostPath:
          path: /var/lib/kubelet/plugins
          type: DirectoryOrCreate
        name: registration-dir
      - hostPath:
          path: /mnt/yssd0
        name: zfs-mount
